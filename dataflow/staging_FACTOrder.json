{
	"name": "staging_FACTOrder",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ODS_Orders",
						"type": "DatasetReference"
					},
					"name": "odsOrders"
				},
				{
					"dataset": {
						"referenceName": "ODS_OrderLines",
						"type": "DatasetReference"
					},
					"name": "odsOrderLines"
				},
				{
					"dataset": {
						"referenceName": "ODS_Customers",
						"type": "DatasetReference"
					},
					"name": "odsCustomers"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ODS_staging_Orders",
						"type": "DatasetReference"
					},
					"name": "odsStagingOrders"
				}
			],
			"transformations": [
				{
					"name": "SelectOrders"
				},
				{
					"name": "SelectOrderLines"
				},
				{
					"name": "Join1"
				},
				{
					"name": "SelectOrder"
				},
				{
					"name": "SelectCustomers"
				},
				{
					"name": "Join2"
				},
				{
					"name": "SelectOrder2"
				},
				{
					"name": "addingRows"
				}
			],
			"script": "source(output(\n\t\tID as integer,\n\t\tOrderID as integer,\n\t\tCustomerID as integer,\n\t\tSalespersonPersonID as integer,\n\t\tPickedByPersonID as integer,\n\t\tContactPersonID as integer,\n\t\tBackorderOrderID as integer,\n\t\tOrderDate as date,\n\t\tExpectedDeliveryDate as date,\n\t\tCustomerPurchaseOrderNumber as string,\n\t\tIsUndersupplyBackordered as boolean,\n\t\tComments as string,\n\t\tDeliveryInstructions as string,\n\t\tInternalComments as string,\n\t\tPickingCompletedWhen as timestamp,\n\t\tLastEditedBy as integer,\n\t\tLastEditedWhen as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> odsOrders\nsource(output(\n\t\tID as integer,\n\t\tOrderLineID as integer,\n\t\tOrderID as integer,\n\t\tStockItemID as integer,\n\t\tDescription as string,\n\t\tPackageTypeID as integer,\n\t\tQuantity as integer,\n\t\tUnitPrice as decimal(18,2),\n\t\tTaxRate as decimal(18,3),\n\t\tPickedQuantity as integer,\n\t\tPickingCompletedWhen as timestamp,\n\t\tLastEditedBy as integer,\n\t\tLastEditedWhen as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> odsOrderLines\nsource(output(\n\t\tID as integer,\n\t\tCustomerID as integer,\n\t\tCustomerName as string,\n\t\tBillToCustomerID as integer,\n\t\tCustomerCategoryID as integer,\n\t\tBuyingGroupID as integer,\n\t\tPrimaryContactPersonID as integer,\n\t\tAlternateContactPersonID as integer,\n\t\tDeliveryMethodID as integer,\n\t\tDeliveryCityID as integer,\n\t\tPostalCityID as integer,\n\t\tCreditLimit as decimal(18,2),\n\t\tAccountOpenedDate as date,\n\t\tStandardDiscountPercentage as decimal(18,3),\n\t\tIsStatementSent as boolean,\n\t\tIsOnCreditHold as boolean,\n\t\tPaymentDays as integer,\n\t\tPhoneNumber as string,\n\t\tFaxNumber as string,\n\t\tDeliveryRun as string,\n\t\tRunPosition as string,\n\t\tWebsiteURL as string,\n\t\tDeliveryAddressLine1 as string,\n\t\tDeliveryAddressLine2 as string,\n\t\tDeliveryPostalCode as string,\n\t\tDeliveryLocation as binary,\n\t\tPostalAddressLine1 as string,\n\t\tPostalAddressLine2 as string,\n\t\tPostalPostalCode as string,\n\t\tLastEditedBy as integer,\n\t\tValidFrom as timestamp,\n\t\tValidTo as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> odsCustomers\nodsOrders select(mapColumn(\n\t\tOrderID,\n\t\tCustomerID,\n\t\tBackorderOrderID,\n\t\tOrderDate,\n\t\tCustomerPurchaseOrderNumber,\n\t\tPickingCompletedWhen\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectOrders\nodsOrderLines select(mapColumn(\n\t\tOrderLineID,\n\t\tOrderID,\n\t\tStockItemID,\n\t\tDescription,\n\t\tQuantity,\n\t\tUnitPrice,\n\t\tTaxRate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectOrderLines\nSelectOrders, SelectOrderLines join(SelectOrders@OrderID == SelectOrderLines@OrderID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin1 select(mapColumn(\n\t\tWWIOrderID = SelectOrders@OrderID,\n\t\tCustomerID,\n\t\tBackorderOrderID,\n\t\tOrderDate,\n\t\tPickingDate = PickingCompletedWhen,\n\t\tStockItemID,\n\t\tDescription,\n\t\tQuantity,\n\t\tUnitPrice,\n\t\tTaxRate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectOrder\nodsCustomers select(mapColumn(\n\t\tCustomerID,\n\t\tCustomerName,\n\t\tDeliveryCityID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCustomers\nSelectOrder, SelectCustomers join(SelectOrder@CustomerID == SelectCustomers@CustomerID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join2\nJoin2 select(mapColumn(\n\t\tWWIOrderID,\n\t\tCityID = DeliveryCityID,\n\t\tCustomerID = SelectOrder@CustomerID,\n\t\tStockItemID,\n\t\tOrderDate,\n\t\tPickingDate,\n\t\tBackorderOrderID,\n\t\tDescription,\n\t\tQuantity,\n\t\tUnitPrice,\n\t\tTaxRate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectOrder2\nSelectOrder2 derive(TotalExcludingTax = UnitPrice*Quantity,\n\t\tTaxAmount = UnitPrice*Quantity*(TaxRate*0.01),\n\t\tTotalIncludingTax = (UnitPrice*Quantity)*(1+TaxRate*0.01)) ~> addingRows\naddingRows sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tWWIOrderID as integer,\n\t\tCityID as integer,\n\t\tCustomerID as integer,\n\t\tStockItemID as integer,\n\t\tOrderDate as date,\n\t\tPickingDate as timestamp,\n\t\tBackorderOrderID as integer,\n\t\tDescription as string,\n\t\tQuantity as integer,\n\t\tUnitPrice as decimal(18,2),\n\t\tTaxRate as decimal(18,3),\n\t\tTotalExcludingTax as decimal(18,3),\n\t\tTaxAmount as decimal(18,3),\n\t\tTotalIncludingTax as decimal(18,3)\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tWWIOrderID,\n\t\tCityID,\n\t\tCustomerID,\n\t\tStockItemID,\n\t\tOrderDate,\n\t\tPickingDate,\n\t\tBackorderOrderID,\n\t\tDescription,\n\t\tQuantity,\n\t\tUnitPrice,\n\t\tTaxRate,\n\t\tTotalExcludingTax,\n\t\tTaxAmount,\n\t\tTotalIncludingTax\n\t)) ~> odsStagingOrders"
		}
	}
}